#!/usr/bin/env python3

#    This file is part of dotfiles.
#    Copyright (C) 2020-2025  Emir Turkes
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    Emir Turkes can be contacted at emir.turkes@eturkes.com

import gi
gi.require_version("GLib", "2.0")

from gi.repository import Gio, GLib

def on_activate(app):
    if app._inhibitor:
        return

    app.hold()

    bus = Gio.bus_get_sync(Gio.BusType.SYSTEM, None)
    var, fdlist = bus.call_with_unix_fd_list_sync('org.freedesktop.login1',
                                                  '/org/freedesktop/login1',
                                                  'org.freedesktop.login1.Manager',
                                                  'Inhibit',
                                                  GLib.Variant('(ssss)',
                                                               ('handle-lid-switch',
                                                                'gnome-tweak-tool-lid-inhibitor',
                                                                'user preference',
                                                                'block')),
                                                  None, 0, -1, None, None)
    app._inhibitor = Gio.UnixInputStream(fd=fdlist.steal_fds()[var[0]])

def on_quit_action(action, param, app):
    app.quit()

if __name__ == '__main__':
    app = Gio.Application(application_id='org.gnome.tweak-tool.lid-inhibitor', flags=0)
    app.connect('activate', on_activate)
    app._inhibitor = None

    action = Gio.SimpleAction(name='quit')
    app.add_action(action)
    action.connect('activate', on_quit_action, app)

    app.run([])

